light.b888999gggttttttt888z:
  supported_features: 19
  brightness: 255
  color_temp: 153



- platform: trend
  sensors:
    shower_detected:
      friendly_name: Bathroom Shower Detected
      device_class: occupancy
      max_samples: 10
      entity_id: sensor.bathroom_humidity
      sample_duration: 60
      min_gradient: 0.15
      
      
      
type: 'custom:auto-entities'
card:
  type: entities
  title: Low Batteries
sort:
  method: state
filter:
  template: |
    {% for entity in states.sensor -%}
     {%- if ('battery' in entity.entity_id) and (state_attr(entity.entity_id, 'battery') != None) and (state_attr(entity.entity_id, "battery") | float <= states("input_number.low_battery_threshold") | float)-%}
      {{entity.entity_id}}
     {% endif %}
    {%- endfor %}



- platform: sql
  db_url: !secret db_url
  queries:
    - name: DB states
      query: 'SELECT round(count(*)/1024,1) AS cnt FROM states;'
      column: "cnt"
      unit_of_measurement: k
      
      
https://community.home-assistant.io/t/counting-open-doors-motion-sensors-solved-by-ranting-at-myself/47377/5      
- platform: template
    sensors:
      door_count:
        value_template: >-
           {{ states | selectattr('entity_id','in',state_attr('group.door_sensors','entity_id')) | selectattr('state','eq','on') | list | count | int}}
      window_count:
        value_template: >-
           {{ states | selectattr('entity_id','in',state_attr('group.window_sensors','entity_id')) | selectattr('state','eq','on') | list | count | int}}
           
           
           
 - platform: template
  sensors:
    door_count:
      value_template: >-
        {{ states.binary_sensor | selectattr('state', 'eq', 'on') | selectattr('attributes.device_class', 'eq', 'door') | list | count }}
    window_count:
      value_template: >-
        {{ states.binary_sensor | selectattr('state', 'eq', 'on') | selectattr('attributes.device_class', 'eq', 'window') | list | count }}
    motion_count:
      value_template: >-
        {{ states.binary_sensor | selectattr('state', 'eq', 'on') | selectattr('attributes.device_class', 'eq', 'motion') | list | count }}
        
        
        
# Doors and Windows Open

- platform: template
  sensors:
    door_count:
      value_template: >
        "{{ expand('group.doors_windows')|selectattr('state','eq','on')|list|count }}" 
        
        
        
              #----- Count Lights
      total_lights:
        friendly_name: 'Lights'
        icon_template: mdi:lightbulb
        value_template: "{{ states.light | list | length }}"

      #----- Count lights switched ON
      total_lights_on:
        friendly_name: 'Lights'
        unit_of_measurement: 'On'
        icon_template: mdi:lightbulb-on
        value_template: "{{ states.light | selectattr( 'state', 'eq', 'on') | list | length }}"





      - row: 4
        columns:
          - column: 1
            # tileOnRow: 4
            entities:
              - title: Test
                entities:
                  - card: custom:mini-graph-card
                    noPadding: true
                    wider: true
                    cardOptions:
                      entities:
                        - entity: sensor.tpl_clcolortemp
                          name: "Badkamer 1"
                      line_color: '#1427ff'
                      hold_action:
                        action: none
                      tap_action:
                        action: none
                  - card: gauge
                    wider: true
                    noPadding: true
                    cardOptions:
                      entity: sensor.tpl_clcolortemp
                      name: With Severity
                      unit: '%'
                      severity:
                        green: 0
                        yellow: 250
                        red: 450
                  - card: custom:dual-gauge-card
                    wider: true
                    higher: true
                    noPadding: true
                    cardOptions:
                      outer:
                        entity: sensor.tpl_clbrightness
                        label: "1"
                        min: 0
                        max: 255
                      inner:
                        entity: sensor.tpl_clcolortemp
                        label: "2"
                        min: 0
                        max: 500
                      colors:
                        - color: "var(--label-badge-yellow)"
                          value: 100
                        - color: "var(--label-badge-green)"
                          value: 150
                        - color: "var(--label-badge-blue)"
                          value: 300



sensor:
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/xiaomi_cube"
    availability_topic: "zigbee2mqtt/bridge/state"
    value_template: "{{ value_json.action }}"
    
    
      - alias: Sonos bio PLAY when Cube FLIP 90
    trigger:
      - platform: mqtt
        topic: 'zigbee2mqtt/xiaomi_cube'
    condition:
      - condition: template
        value_template: '{{ "flip90" == trigger.payload_json.action or "flip180" == trigger.payload_json.action or "tap" == trigger.payload_json.action }}'
    action:
      - service: media_player.volume_set
        data:
          entity_id: media_player.bio
          volume_level: 0.15
      - service: media_player.select_source
        data_template:
          entity_id: media_player.bio
          source: '{{ states.input_select.select_radio_ihc_dag.state }}'
      - service: media_player.media_play
        data:
          entity_id: media_player.bio
          
          
# show total uptime time
  - platform: template
    sensors:
      up_time:
        friendly_name: Up Time
        value_template: >
          {{ ((now() - strptime(states('sensor.uptime'), '%Y-%m-%dT%H:%M:%S.%f%z')) | string)[:-10] }}
