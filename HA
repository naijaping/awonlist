light.b888999gggttttttt888z:
  supported_features: 19
  brightness: 255
  color_temp: 153



- platform: trend
  sensors:
    shower_detected:
      friendly_name: Bathroom Shower Detected
      device_class: occupancy
      max_samples: 10
      entity_id: sensor.bathroom_humidity
      sample_duration: 60
      min_gradient: 0.15
      
      
      
type: 'custom:auto-entities'
card:
  type: entities
  title: Low Batteries
sort:
  method: state
filter:
  template: |
    {% for entity in states.sensor -%}
     {%- if ('battery' in entity.entity_id) and (state_attr(entity.entity_id, 'battery') != None) and (state_attr(entity.entity_id, "battery") | float <= states("input_number.low_battery_threshold") | float)-%}
      {{entity.entity_id}}
     {% endif %}
    {%- endfor %}



- platform: sql
  db_url: !secret db_url
  queries:
    - name: DB states
      query: 'SELECT round(count(*)/1024,1) AS cnt FROM states;'
      column: "cnt"
      unit_of_measurement: k
      
      
https://community.home-assistant.io/t/counting-open-doors-motion-sensors-solved-by-ranting-at-myself/47377/5      
- platform: template
    sensors:
      door_count:
        value_template: >-
           {{ states | selectattr('entity_id','in',state_attr('group.door_sensors','entity_id')) | selectattr('state','eq','on') | list | count | int}}
      window_count:
        value_template: >-
           {{ states | selectattr('entity_id','in',state_attr('group.window_sensors','entity_id')) | selectattr('state','eq','on') | list | count | int}}
           
           
           
 - platform: template
  sensors:
    door_count:
      value_template: >-
        {{ states.binary_sensor | selectattr('state', 'eq', 'on') | selectattr('attributes.device_class', 'eq', 'door') | list | count }}
    window_count:
      value_template: >-
        {{ states.binary_sensor | selectattr('state', 'eq', 'on') | selectattr('attributes.device_class', 'eq', 'window') | list | count }}
    motion_count:
      value_template: >-
        {{ states.binary_sensor | selectattr('state', 'eq', 'on') | selectattr('attributes.device_class', 'eq', 'motion') | list | count }}
        
        
        
# Doors and Windows Open

- platform: template
  sensors:
    door_count:
      value_template: >
        "{{ expand('group.doors_windows')|selectattr('state','eq','on')|list|count }}" 
        
        
        
              #----- Count Lights
      total_lights:
        friendly_name: 'Lights'
        icon_template: mdi:lightbulb
        value_template: "{{ states.light | list | length }}"

      #----- Count lights switched ON
      total_lights_on:
        friendly_name: 'Lights'
        unit_of_measurement: 'On'
        icon_template: mdi:lightbulb-on
        value_template: "{{ states.light | selectattr( 'state', 'eq', 'on') | list | length }}"





      - row: 4
        columns:
          - column: 1
            # tileOnRow: 4
            entities:
              - title: Test
                entities:
                  - card: custom:mini-graph-card
                    noPadding: true
                    wider: true
                    cardOptions:
                      entities:
                        - entity: sensor.tpl_clcolortemp
                          name: "Badkamer 1"
                      line_color: '#1427ff'
                      hold_action:
                        action: none
                      tap_action:
                        action: none
                  - card: gauge
                    wider: true
                    noPadding: true
                    cardOptions:
                      entity: sensor.tpl_clcolortemp
                      name: With Severity
                      unit: '%'
                      severity:
                        green: 0
                        yellow: 250
                        red: 450
                  - card: custom:dual-gauge-card
                    wider: true
                    higher: true
                    noPadding: true
                    cardOptions:
                      outer:
                        entity: sensor.tpl_clbrightness
                        label: "1"
                        min: 0
                        max: 255
                      inner:
                        entity: sensor.tpl_clcolortemp
                        label: "2"
                        min: 0
                        max: 500
                      colors:
                        - color: "var(--label-badge-yellow)"
                          value: 100
                        - color: "var(--label-badge-green)"
                          value: 150
                        - color: "var(--label-badge-blue)"
                          value: 300



sensor:
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/xiaomi_cube"
    availability_topic: "zigbee2mqtt/bridge/state"
    value_template: "{{ value_json.action }}"
    
    
      - alias: Sonos bio PLAY when Cube FLIP 90
    trigger:
      - platform: mqtt
        topic: 'zigbee2mqtt/xiaomi_cube'
    condition:
      - condition: template
        value_template: '{{ "flip90" == trigger.payload_json.action or "flip180" == trigger.payload_json.action or "tap" == trigger.payload_json.action }}'
    action:
      - service: media_player.volume_set
        data:
          entity_id: media_player.bio
          volume_level: 0.15
      - service: media_player.select_source
        data_template:
          entity_id: media_player.bio
          source: '{{ states.input_select.select_radio_ihc_dag.state }}'
      - service: media_player.media_play
        data:
          entity_id: media_player.bio
          
          

          
 - platform: template
    sensors:
      ha_uptime:
        friendly_name: HA Uptime
        value_template: '{{ states.sensor.last_boot.state.split("T")[0] }}'         
          
          
        
   #todays date     
  - platform: template
    sensors:
      date_template:
        friendly_name: 'Date'
        value_template: '{{ as_timestamp(now()) | timestamp_custom("%d/%m/%y", True) }}'
        
        
- platform: template

sensors:

total_daily_energy_cost:

friendly_name: 'Total Power Cost - Daily'

value_template: "{{ '{:.2f}'.format((states('sensor.utility_meter _total_energy_daily')|float) * (states('input_number.electricity_energy_cost')|float)/100) }}"

unit_of_measurement: "Â£"




- platform: template
  sensors:
    sensor_count:
      friendly_name: 'Number of Sensors'
      value_template: >-
        {{ states.sensor | rejectattr('state', 'eq', 'unavailable') | list | count }}
    automation_count:
      friendly_name: 'Number of Automations'
      value_template: >-
        {{ states.automation| rejectattr('state', 'eq', 'unavailable') | list | count }}
    script_count:
      friendly_name: 'Number of Scripts'
      value_template: >-
        {{ states.script | rejectattr('state', 'eq', 'unavailable') | list | count }}
    binary_sensor_count:
      friendly_name: 'Number of Binary Sensors'
      value_template: >-
        {{ states.binary_sensor | rejectattr('state', 'eq', 'unavailable') | list | count }}
    tracker_count:
      friendly_name: 'Number of Devices'
      value_template: >-
        {{ states.device_tracker| rejectattr('state', 'eq', 'unavailable') | list | count }}
    lights_count:
      friendly_name: 'Number of Lights'
      value_template: >-
        {{ states.light | rejectattr('state', 'eq', 'unavailable') | list | count }}
    switches_count:
      friendly_name: 'Number of Switches'
      value_template: >-
        {{ states.switch | rejectattr('state', 'eq', 'unavailable') | list | count }}
    camera_count:
      friendly_name: 'Number of online Cameras'
      value_template: >-
        {{ states.camera | rejectattr('state', 'eq', 'unavailable') | list | count }}
    entities_count:
      friendly_name: 'Number of Entities'
      value_template: >-
        {{ states | rejectattr('state', 'eq', 'unavailable') | list | count}}
    hvac_action:
      friendly_name: 'HVAC Action'
      value_template: "{{states.climate.home.attributes.hvac_action}}"
    today_is:
      friendly_name: 'Today is'
      value_template: "{{ ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'][now().weekday()] }}"
      
      
sensor:
  - platform: time_date
    display_options:
      - 'time'
  - platform: template
    sensors:
      timetoleavealexamin:
        friendly_name: Time to go Alexa min
        entity_id: sensor.time
        value_template: >-
          {% if states.calendar.calendar.attributes.start_time %}
            {{((as_timestamp(states.calendar.work.attributes.start_time) - as_timestamp(now())) / 60) | default(99) | int }}
          {%- else -%}
            0
          {%- endif %}
          
 automation event_in_120min:
  alias: Event in 120 minutes for Google Calendar
  trigger:
    platform: state
    entity_id: sensor.timetoleavealexamin
    to: '120'
    action:
        
        
        
- platform: template
    sensors:
      event_title:
        value_template: "{{ states.calendar.homecal.attributes.message }}"
        friendly_name: "Next Event"




- cal_id: !secret main_calender
  entities:
  - device_id: main_calender
    name: Main Calender
    track: true

- cal_id: en.usa#holiday@group.v.calendar.google.com
  entities:
  - device_id: holidays_in_united_states
    name: Holidays in United States
    track: true

- cal_id: addressbook#contacts@group.v.calendar.google.com
  entities:
  - device_id: address_book_contacts
    name: Address book Contacts
    track: true
    
    
    ######################## Holidays #########################################

  - platform: template
    sensors:
      next_holiday:
        friendly_name: "Next Holiday"
        value_template: "{{ states.calendar.holidays_in_united_states.attributes.message }}"

  - platform: template
    sensors:
      next_holiday_date_time:
        friendly_name: "Next Holiday"
        value_template: "{{ as_timestamp(states.calendar.holidays_in_united_states.attributes.start_time) | timestamp_custom('%D %-I:%M %P') }}"

  - platform: template
    sensors:
      days_to_next_holiday:
        friendly_name: "Days to Next Holiday"
        value_template: >-
              {% set year = states.sensor.date.state.split('-')[0] %}
              {% set month = states.sensor.date.state.split('-')[1] %}
              {% set date = states.sensor.date.state.split('-')[2] %}
              {%- set Month = states.calendar.holidays_in_united_states.attributes.start_time.split('-')[1] -%}
              {%- set DayDate = states.calendar.holidays_in_united_states.attributes.start_time.split('-')[2] -%}
              {%- set numOfDays = ((as_timestamp(strptime(year ~ '-' ~ Month ~ '-' ~ DayDate , '%Y-%m-%d')) | timestamp_custom('%j', true) | int ) - (as_timestamp(strptime(year ~ '-' ~ month~ '-' ~ date , '%Y-%m-%d')) | timestamp_custom('%j', true) | int)) -%}
              {%- if numOfDays < 0 -%}
                {{ numOfDays + 365 }}
              {%- else -%}
                {{ numOfDays }}
              {%- endif -%}
######################### Birthdays ####################################

  - platform: template
    sensors:
      next_birthday_date_time:
        friendly_name: "Next Birthday Date Time"
        value_template: "{{ as_timestamp(states.calendar.contacts.attributes.start_time) | timestamp_custom('%D %-I:%M %P') }}"

  - platform: template
    sensors:
      next_birthday:
        friendly_name: "Next Birthday"
        value_template: "{{ states.calendar.contacts.attributes.message }}"

  - platform: template
    sensors:
      days_to_next_birthday:
        friendly_name: "Days to Next Birthday"
        value_template: >-
              {% set year = states.sensor.date.state.split('-')[0] %}
              {% set month = states.sensor.date.state.split('-')[1] %}
              {% set date = states.sensor.date.state.split('-')[2] %}
              {%- set Month = states.calendar.contacts.attributes.start_time.split('-')[1] -%}
              {%- set DayDate = states.calendar.contacts.attributes.start_time.split('-')[2] -%}
              {%- set numOfDays = ((as_timestamp(strptime(year ~ '-' ~ Month ~ '-' ~ DayDate , '%Y-%m-%d')) | timestamp_custom('%j', true) | int ) - (as_timestamp(strptime(year ~ '-' ~ month~ '-' ~ date , '%Y-%m-%d')) | timestamp_custom('%j', true) | int)) -%}
              {%- if numOfDays < 0 -%}
                {{ numOfDays + 365 }}
              {%- else -%}
                {{ numOfDays }}
              {%- endif -%}
################# Appontments ####################################

  - platform: template
    sensors:
      next_appt_date_time:
        friendly_name: "Next Appt Date Time"
        value_template: "{{ as_timestamp(states.calendar.main_calender.attributes.start_time) | timestamp_custom('%D %-I:%M %P') }}"

  - platform: template
    sensors:
      next_appt_message:
        friendly_name: "Next Appt Type"
        value_template: "{{ states.calendar.main_calender.attributes.message }}"

  - platform: template
    sensors:
      next_appt_description:
        friendly_name: "Next Appt Description"
        value_template: "{{ states.calendar.main_calender.attributes.description }}"

  - platform: template
    sensors:
      days_to_next_appointment:
        friendly_name: "Days to Next Appointment"
        value_template: >-
              {% set year = states.sensor.date.state.split('-')[0] %}
              {% set month = states.sensor.date.state.split('-')[1] %}
              {% set date = states.sensor.date.state.split('-')[2] %}
              {%- set Month = states.calendar.main_calender.attributes.start_time.split('-')[1] -%}
              {%- set DayDate = states.calendar.main_calender.attributes.start_time.split('-')[2] -%}
              {%- set numOfDays = ((as_timestamp(strptime(year ~ '-' ~ Month ~ '-' ~ DayDate , '%Y-%m-%d')) | timestamp_custom('%j', true) | int ) - (as_timestamp(strptime(year ~ '-' ~ month~ '-' ~ date , '%Y-%m-%d')) | timestamp_custom('%j', true) | int)) -%}
              {%- if numOfDays < 0 -%}
                {{ numOfDays + 365 }}
              {%- else -%}
                {{ numOfDays }}
              {%- endif -%}
automation:

########################## Birthdays #######################################

  - alias: Birthday Countdown 30 Days
    initial_state: 'on'
    hide_entity: false
    trigger:
      - platform: state
        entity_id: input_boolean.boolean_home
        to: 'on'
    condition:
      - condition: template
        value_template: "{{ states.sensor.days_to_next_birthday.state | int > 0 and states.sensor.days_to_next_birthday.state | int < 30 }}"
    action:
      - delay: '00:01:00'
      - service: tts.google_say
        data_template:
          entity_id: media_player.ha_speaker, media_player.master_bedroom_cast
          message: 'BIRTHDAY COUNTDOWN {{states.sensor.next_birthday.state}} is {{states.sensor.days_to_next_birthday.state}} days away'

  - alias: Random Birthday Wishes
    initial_state: 'on'
    hide_entity: false
    trigger:
      platform: time_pattern
      hours: '/1'
      minutes: 3
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.boolean_home
          state: 'on'
        - condition: state
          entity_id: calendar.contacts
          state: 'on'
    action:
      - service: tts.google_say
        data_template:
          entity_id: media_player.ha_speaker, media_player.master_bedroom_cast
          message: !include ../intent_templates/birthday_wishes.yaml

####### Holiday Announcment ################

  - alias: Holiday Countdown 7 Days
    initial_state: 'on'
    hide_entity: false
    trigger:
      - platform: state
        entity_id: input_boolean.boolean_home
        to: 'on'
    condition:
      - condition: template
        value_template: "{{ states.sensor.days_to_next_holiday.state | int > 0 and states.sensor.days_to_next_holiday.state | int < 8 }}"
    action:
      - delay: '00:01:00'
      - service: tts.google_say
        data_template:
          entity_id: media_player.ha_speaker, media_player.master_bedroom_cast
          message: 'Holiday COUNTDOWN {{states.sensor.next_holiday.state}} is {{states.sensor.days_to_next_holiday.state}} days away'

  - alias: Holiday
    initial_state: 'on'
    hide_entity: false
    trigger:
      platform: time_pattern
      hours: '/1'
      minutes: 3
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.boolean_home
          state: 'on'
        - condition: state
          entity_id: calendar.holidays_in_united_states
          state: 'on'
    action:
      - service: tts.google_say
        data_template:
          entity_id: media_player.ha_speaker, media_player.master_bedroom_cast
          message: 'Today is {{ states.calendar.holidays_in_united_states.attributes.message }}'

##### appointment Announcment   ###################

  - alias: Dr Appointment Reminder 3 days
    initial_state: 'on'
    hide_entity: false
    trigger:
      - platform: state
        entity_id: input_boolean.boolean_home
        to: 'on'
    condition:
      - condition: template
        value_template: "{{ states.sensor.days_to_next_appointment.state | int > 0 and states.sensor.days_to_next_appointment.state | int < 4 }}"
      - condition: template
        value_template: "{{ states.sensor.days_to_next_appointment.state != 'Unknown' }}"
      - condition: template
        value_template: "{{ states.calendar.main_calender.attributes.description != 'None' }}"
    action:
      - delay: '00:01:15'
      - service: tts.google_say
        data_template:
          entity_id: media_player.ha_speaker, media_player.master_bedroom_cast
          message: >-
            Appointment Reminder {{ states.calendar.main_calender.attributes.message }}
            with {{ states.calendar.main_calender.attributes.description }} is
            {{ states.sensor.days_to_next_appointment.state }} days away
      - service: notify.pushbullet
        data_template:
          message: >-
            Appointment Reminder {{ states.calendar.main_calender.attributes.message }}
            with {{ states.calendar.main_calender.attributes.description }} is
            {{states.sensor.days_to_next_appointment.state}} days away
      - service: notify.chrome_push
        data_template:
          title: "Appointment Reminder"
          message: >-
            Appointment Reminder {{ states.calendar.main_calender.attributes.message }}
            with {{ states.calendar.main_calender.attributes.description }} is
            {{states.sensor.days_to_next_appointment.state}} days away
  - alias: Dr Appontments
    initial_state: 'on'
    hide_entity: false
    trigger:
      platform: state
      entity_id: input_boolean.boolean_home
      to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.boolean_home
          state: 'on'
        # - condition: template
        #   value_template: "{{ states.sensor.days_to_next_appointment.state | int == 0 }}"
        # - condition: template
        #   value_template: "{{ states.calendar.main_calender.attributes is defined }}"
        - condition: template
          value_template: "{{ state_attr('calendar.main', 'description') != None }}"
        # - condition: template
        #   value_template: "{{ state_attr('calendar.main', 'start_time') != '' }}"
    action:
      - delay: '00:01:30'
      - service: tts.google_say
        data_template:
          entity_id: media_player.ha_speaker, media_player.master_bedroom_cast
          message: >-
            Dr appointment today {{ states.calendar.main_calender.attributes.description }}
            at {{ as_timestamp(states.calendar.main_calender.attributes.start_time) | timestamp_custom('%-I:%M %P') }}
      - service: notify.pushbullet
        data_template:
          message: >-
            Appointment Today {{ states.calendar.main_calender.attributes.message }}
            with {{ states.calendar.main_calender.attributes.description }}
            at {{ as_timestamp(states.calendar.main_calender.attributes.start_time) | timestamp_custom('%-I:%M %P') }}
      - service: notify.chrome_push
        data_template:
          title: "Appointment Reminder"
          message: >-
            Appointment Today {{ states.calendar.main_calender.attributes.message }}
            with {{ states.calendar.main_calender.attributes.description }} at
            {{ as_timestamp(states.calendar.main_calender.attributes.start_time) | timestamp_custom('%-I:%M %P') }}

