# ## This will notify if any doors are open it requires the [sensor.door_count] **it won't allow you to arm the alarm until all windows are closed**
#
#   - alias: Open Doors Notification On Alarm Set
#     trigger:
#     - platform: state
#       entity_id: alarm_control_panel.ha_alarm
#       to: pending
#     condition:
#     - condition: numeric_state
#       above: '1'
#       entity_id: sensor.door_count
#     action:
#     - service: tts.google_say
#       data:
#         entity_id: media_player.tts_kodi
#         message: There are still doors open maybe you should close them first.
#     - service: alarm_control_panel.alarm_disarm
#
# ## This will notify if any windows are open it requires the [sensor.window_count] **it won't allow you to arm the alarm until all windows are closed**
#
#   - alias: Open Windows Notification on Alarm Set
#     trigger:
#     - platform: state
#       entity_id: alarm_control_panel.ha_alarm
#       to: pending
#     condition:
#     - condition: numeric_state
#       above: '0'
#       entity_id: sensor.window_count
#     action:
#     - delay: 00:00:20
#     - service: tts.google_say
#       data:
#         entity_id: media_player.tts_kodi
#         message: There are still windows open maybe you should close them first.
#     - service: alarm_control_panel.alarm_disarm
#
# ## This will use the Xiaomi Gateway to sound an alarm if the system has been triggered
#
#   - alias: Start Siren on Alarm Trigger
#     trigger:
#     - platform: state
#       entity_id: alarm_control_panel.ha_alarm
#       to: triggered
#     action:
#     - service: xiaomi_aqara.play_ringtone
#       data:
#         gw_mac: !secret xiaomimac
#         ringtone_id: 0
#         ringtone_vol: 80
#     - service: light.turn_on
#       entity_id: group.downstairs_lights
#     - service: tts.google_say
#       data:
#         entity_id: media_player.tts_kodi
#         message: Alarm triggered you have 2 minutes to reset or police will be contacted!
#     - service: switch.turn_on
#       data:
#         entity_id: switch.away_alarm_triggered
#
# ## This will stop the siren once the correct alarm code has been entered
#
#   - alias: Stop Alarm Siren
#     trigger:
#     - platform: state
#       entity_id: alarm_control_panel.ha_alarm
#       from: triggered
#     action:
#     - service: xiaomi_aqara.stop_ringtone
#       data:
#         gw_mac: !secret xiaomimac
#     - service: tts.google_say
#       data:
#         entity_id: media_player.tts_kodi
#         message: Alarm deactivated!
#     - service: switch.turn_on
#       data:
#         entity_id: switch.alarm_deactivated


automation:

## Create daily snapshot of hassio
  # - alias: Daily Backup at 3 AM
  #   trigger:
  #     platform: time
  #     at: '3:00:00'
  #   action:
  #   - service: hassio.snapshot_full
  #     data_template:
  #       name: Automated Backup {{ now().strftime('%Y-%m-%d') }}

## Upload snapshot to Dropbox
    - alias: Upload dropbox 4AM
      trigger:
        platform: time
        at: '4:00:00'
      action:
      - service: hassio.addon_stdin
        data_template:
          addon: 7be23ff5_dropbox_sync
          input: {"command":"upload"}



- id: someones_ringing_the_bell
  alias: Someone rang the doorbell
  trigger:
  - platform: state
    entity_id: binary_sensor.ring_front_door_ding
    to: 'on'
  action:
  - service: media_player.play_media
    data_template:
      entity_id: media_player.googlehome
      media_content_id: https://ha.markdavies.com/local/audio/labrador.mp3
      media_content_type: audio/mp3
  - service: notify.pushbullet
    data:
      message: "{{ now().strftime('%a - %H:%M') }}: *Someone Rang The Doorbell*\nSomeone at the door rang the bell."
  - service: notify.gmail
    data:
      title: Someone Rang the Doorbell
      message: Someone at the door rang the bell!
      
automation:
  - alias: 'Send Notification'
    trigger:
      ...
    action:
      - service: notify.mobile_app_<your_device_id_here>
        data:
          message: "Notification text"
          
          
notify:
  - name: ALL_DEVICES
    platform: group
    services:
      - service: mobile_app_iphone_one
      - service: mobile_app_iphone_two
      - service: mobile_app_ipad_one
      - service: mobile_app_pixel_4_xl
      
      
      
      
  automation:
    - alias: "Notify Mobile app group"
      trigger:
        ...
      action:
        - service: notify.ALL_DEVICES
          data:
            message: "Something happened at home!"
